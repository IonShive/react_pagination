{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","SELECTOR_OPTIONS","Pagination","total","itemsPerPage","currentPage","setCurrentPage","totalPages","Math","ceil","pages","className","cn","disabled","onClickCapture","href","map","page","active","items","App","useState","setItemsPerPage","isFirstItem","isLastItem","getVisibleItems","slice","id","onChange","event","value","target","i","selected","htmlFor","item","replaceAll","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EAGF,IACMG,EAA6B,CAAC,EAAG,EAAG,GAAI,I,uBCAxCC,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,YACAC,EACI,EADJA,eAEMC,EAAaC,KAAKC,KAAKN,EAAQC,GAC/BM,EAAQf,EAAW,EAAGY,GAc5B,OACE,qBAAII,UAAU,aAAd,UACE,oBACEA,UAAS,oBAAeC,IAAG,CACzBC,SAA0B,IAAhBR,KAEZS,eAlBS,WACO,IAAhBT,GACFC,EAAeD,EAAc,IAY7B,SAME,mBACE,UAAQ,WACRM,UAAU,YACVI,KAAI,WAAMV,GACV,gBAA+B,IAAhBA,EAJjB,oBAUDK,EAAMM,KAAI,SAACC,GAAD,OACT,oBACEN,UAAS,oBAAeC,IAAG,CACzBM,OAAQb,IAAgBY,KAG1BH,eAAgB,kBAAMR,EAAeW,IALvC,SAOE,mBAAG,UAAQ,WAAWN,UAAU,YAAYI,KAAI,WAAME,GAAtD,SACGA,KARL,oBAIoBA,OAStB,oBACEN,UAAS,oBAAeC,IAAG,CACzBC,SAAUR,IAAgBE,KAE5BO,eA1CS,WACTT,IAAgBE,GAClBD,EAAeD,EAAc,IAoC7B,SAME,mBACE,UAAQ,WACRM,UAAU,YACVI,KAAI,WAAMV,GACV,gBAAeA,IAAgBE,EAJjC,wBCjEFY,EAAQxB,EAAW,EFKE,IELcqB,KAAI,SAACjB,GAAD,qBAAeA,MAE/CqB,EAAgB,WAC3B,MAAsCC,mBAAiB,GAAvD,mBAAOhB,EAAP,KAAoBC,EAApB,KACA,EAAwCe,mBAAiB,GAAzD,mBAAOjB,EAAP,KAAqBkB,EAArB,KAEMC,GAAelB,EAAc,GAAKD,EAClCoB,EACFnB,EAAcD,EFHO,MEKnBC,EAAcD,EASdqB,EAAkBN,EAAMO,MAAMH,EAAaC,GAEjD,OACE,sBAAKb,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,SACG,eAAQN,EAAR,mBAA8BkB,EAAc,EAA5C,cAAmDC,EAAnD,kBFrBkB,GEqBlB,OAIH,sBAAKb,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRgB,GAAG,kBACHhB,UAAU,eACViB,SAxBW,SAACC,GACpB,IAAQC,EAAUD,EAAME,OAAhBD,MAERR,GAAiBQ,GACjBxB,EAAe,IAgBT,SAMGL,EAAiBe,KAAI,SAACgB,GAAD,OACpB,wBAAQF,MAAOE,EAAGC,SAAUD,IAAM5B,EAAlC,SACG4B,WAMT,uBAAOE,QAAQ,kBAAkBvB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACER,MF/CmB,GEgDnBC,aAAcA,EACdC,YAAaA,EACbC,eAAgBA,IAGlB,6BACGmB,EAAgBT,KAAI,SAACmB,GAAD,OACnB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,EAAKC,WAAW,IAAK,eC9DvDC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.aa1a0110.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n\nexport const TOTAL_ITEMS = 42;\nexport const SELECTOR_OPTIONS: number[] = [3, 5, 10, 20];\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  itemsPerPage: number;\n  currentPage: number;\n  setCurrentPage: (value: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  itemsPerPage,\n  currentPage,\n  setCurrentPage,\n}) => {\n  const totalPages = Math.ceil(total / itemsPerPage);\n  const pages = getNumbers(1, totalPages);\n\n  const onPrev = () => {\n    if (currentPage !== 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n\n  const onNext = () => {\n    if (currentPage !== totalPages) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={`page-item ${cn({\n          disabled: currentPage === 1,\n        })}`}\n        onClickCapture={onPrev}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href={`#${currentPage}`}\n          aria-disabled={currentPage === 1}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map((page) => (\n        <li\n          className={`page-item ${cn({\n            active: currentPage === page,\n          })}`}\n          key={`page-item-${page}`}\n          onClickCapture={() => setCurrentPage(page)}\n        >\n          <a data-cy=\"pageLink\" className=\"page-link\" href={`#${page}`}>\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={`page-item ${cn({\n          disabled: currentPage === totalPages,\n        })}`}\n        onClickCapture={onNext}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href={`#${currentPage}`}\n          aria-disabled={currentPage === totalPages}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers, TOTAL_ITEMS, SELECTOR_OPTIONS } from './utils';\nimport { Pagination } from './components/Pagination/Pagination';\n\nconst items = getNumbers(1, TOTAL_ITEMS).map((n) => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [itemsPerPage, setItemsPerPage] = useState<number>(5);\n\n  const isFirstItem = (currentPage - 1) * itemsPerPage;\n  const isLastItem\n    = currentPage * itemsPerPage > TOTAL_ITEMS\n      ? TOTAL_ITEMS\n      : currentPage * itemsPerPage;\n\n  const handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    setItemsPerPage(+value);\n    setCurrentPage(1);\n  };\n\n  const getVisibleItems = items.slice(isFirstItem, isLastItem);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${isFirstItem + 1} - ${isLastItem} `\n          + `of ${TOTAL_ITEMS})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={handleSelect}\n          >\n            {SELECTOR_OPTIONS.map((i) => (\n              <option value={i} selected={i === itemsPerPage}>\n                {i}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={TOTAL_ITEMS}\n        itemsPerPage={itemsPerPage}\n        currentPage={currentPage}\n        setCurrentPage={setCurrentPage}\n      />\n\n      <ul>\n        {getVisibleItems.map((item) => (\n          <li data-cy=\"item\" key={item.replaceAll(' ', '-')}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}